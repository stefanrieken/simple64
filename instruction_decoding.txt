See http://www.llx.com/~nparker/a2/opcodes.html

instruction := aaabbbcc

cc ~= category;
bbb ~= address mode
aaa ~= command


Possible address modes per category (cc)

01

000	(zero page,X)
001	zero page
010	#immediate
011	absolute
100	(zero page),Y
101	zero page,X
110	absolute,Y
111	absolute,X


00 or 10 (11 is nonexistent)

000	#immediate
001	zero page
010	accumulator
011	absolute
101	zero page,X
111	absolute,X

Combined

000	01 ? (zero page,X) : #immediate
001	zero page
010	00: not used; 01: #immediate; 10: irregular or 'accumulator'
011	absolute
100	(zero page),Y (only on 01)
101	zero page,X
110	absolute,Y (only on 01)
111	absolute,X


Regular / orthogonal calls per category

aaa	00		01		10
---	--		--		--
000			ORA		ASL
001	BIT		AND		ROL
010	JMPrel		EOR		LSR
011	JMPabs		ADC		ROR
100	STY		STA		STX
101	LDY		LDA		LDX
110	CPY		CMP		DEC
111	CPX		SBC		INC

Addressing modes used at 00: zeropage, absolute, indirect, zeropage,x, immediate, absolute,x

The otherwise unfilled bbb=000 host a limited number of irregularly-encoded interrupt instructions,
which share their 'aaa' with other ((more) regular) instructions:

aaa	bbb=000 (c=00)
---	---
000	BRK			0000 0000
001	JSRabs			0010 0000
010	RTI			0100 0000
011	RTS			0110 0000

Good use has also been made of the fact that 00-instructions do not use addressing modes bbb=010, 100 and 110 .

The bbb=010 instructions host a number of modeless instructions:

aaa	bbb=010 (c=00)
---	---
000	PHP
001	PLP
010	PHA
011	PLA
100	DEY
101	TAY
110	INX
111	INY

The bbb=100 instructions are all branches, with a regular setup:
- The first two aa numbers select (in order) the Negative, Overflow, Carry and Zero status bits;
- The remaining a selects wether to test for true (1) or false (0)

The bbb=110 instructions are also modeless:

aaa	bbb=110 (c=00)
---	---
000	CLC
001	SEC
010	CLI
011	SEI
100	TYA
101	CLV
110	CLD
111	SED


The same thing happens for cc=10

Here, bbb=010 is the 'accumulator' addressing mode for anything below aaa=100 (=ASL,ROL,LSR,ROR).
This 'mode' is an irregularity in its own right. From there, four more irregular instructions are added:


aaa	bbb=010 (cc=10)
---	---
100	TXA	(normally STX)
101	TAX	(normally LDX)
110	DEX	(noramlly DEC)
111	NOP	(normally INC)

The otherwise unused mode bbb=110 hosts the last few operations:

aaa	bbb=110 (cc=10)
---	---
100	TXS
101	TSX


Debatable

JMPabs	4C	010 011 00	=> proper absolute addressing
JMPind	6C	011 011 00	=> not zero-page indirect, but 'absolute indirect' so unique` form



TXA	8A	100 010 10
TXS	9A	100 110 10
TAX	AA	101 010 10
TSX	BA	101 110 10
DEX	CA	110 010 10
NOP	EA	111 010 10




0	0000
1	0001
2	0010
3	0011
4	0100
5	0101
6	0110
7	0111
8	1000
9	1001
A	1010
B	1011
C	1100
D	1101
E	1110
F	1111



